on:
  push:
    branches:
      - master
jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x64
            file-ext: .exe
          - os: macos-latest
            rid: osx-x64
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.101'
      - name: dotnet publish
        run: dotnet publish -c release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true
      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: example-dotnet-release-${{ matrix.rid }}${{ matrix.file-ext }}
          path: bin/release/net5.0/${{ matrix.rid }}/publish/example-dotnet-release${{ matrix.file-ext }}
  release:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: release ${{ github.sha }}
          draft: false
          prerelease: false
      # - name: upload release asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip