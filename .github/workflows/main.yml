on:
  push:
    branches:
      - master
jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: release ${{ github.run_id }}
          draft: false
          prerelease: false

      - name: Save release upload URL to artifact
        run: echo "${{ steps.release.outputs.upload_url }}" > artifacts/release-upload-url

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: artifacts

  publish:
    needs: [create-release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            rid: linux-x64
          # - os: windows-latest
          #   rid: win-x64
          #   file-ext: .exe
          # - os: macos-latest
          #   rid: osx-x64
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.101'

      - name: dotnet publish
        run: dotnet publish -c release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishReadyToRun=true -p:IncludeNativeLibrariesForSelfExtract=true

      - name: upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: example-dotnet-release-${{ matrix.rid }}${{ matrix.file-ext }}
          path: bin/release/net5.0/${{ matrix.rid }}/publish/example-dotnet-release${{ matrix.file-ext }}

      - name: Get release download URL
        uses: actions/download-artifact@v1
        with:
          name: artifacts
          path: artifacts

      - name: Set release upload URL and release version
        shell: bash
        run: |
          release_upload_url="$(cat artifacts/release-upload-url)"
          echo "RELEASE_UPLOAD_URL=$release_upload_url" >> $GITHUB_ENV

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path;: bin/release/net5.0/${{ matrix.rid }}/publish/example-dotnet-release${{ matrix.file-ext }}
          asset_name: example-dotnet-release-linux-x64
          asset_content_type: application/octet-stream